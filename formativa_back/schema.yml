openapi: 3.0.3
info:
  title: Formativa API
  version: 1.0.0
  description: Documentação referente à API para gerenciamento do backend da Escola
    EDUC
paths:

  /app/disciplinas/:
    get:
      operationId: app_disciplinas_list
      tags:
      - app
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Disciplina'
          description: ''
    post:
      operationId: app_disciplinas_create
      tags:
      - app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Disciplina'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Disciplina'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Disciplina'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disciplina'
          description: ''

  /app/disciplinas/{id}/:
    get:
      operationId: app_disciplinas_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - app
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disciplina'
          description: ''
    put:
      operationId: app_disciplinas_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Disciplina'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Disciplina'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Disciplina'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disciplina'
          description: ''
    patch:
      operationId: app_disciplinas_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDisciplina'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDisciplina'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDisciplina'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disciplina'
          description: ''
    delete:
      operationId: app_disciplinas_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - app
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body

  /app/disciplinas/professores/{ni}/:
    get:
      operationId: app_disciplinas_professores_list
      parameters:
      - in: path
        name: ni
        schema:
          type: integer
        required: true
      tags:
      - app
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Disciplina'
          description: ''

  /app/reservas/:
    get:
      operationId: app_reservas_list
      tags:
      - app
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reserva'
          description: ''
    post:
      operationId: app_reservas_create
      tags:
      - app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reserva'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Reserva'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Reserva'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reserva'
          description: ''

  /app/reservas/{id}/:
    get:
      operationId: app_reservas_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - app
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reserva'
          description: ''
    put:
      operationId: app_reservas_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reserva'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Reserva'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Reserva'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reserva'
          description: ''
    patch:
      operationId: app_reservas_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReserva'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReserva'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReserva'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reserva'
          description: ''
    delete:
      operationId: app_reservas_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - app
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body

  /app/reservas/professores:
    get:
      operationId: app_reservas_professores_list
      tags:
      - app
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reserva'
          description: ''
  /app/salas/:
    get:
      operationId: app_salas_list
      tags:
      - app
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Salas'
          description: ''
    post:
      operationId: app_salas_create
      tags:
      - app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Salas'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Salas'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Salas'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Salas'
          description: ''

  /app/token/:
    post:
      operationId: app_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''

  /app/token/refresh/:
    post:
      operationId: app_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''

  /app/usuarios/:
    get:
      operationId: app_usuarios_list
      tags:
      - app
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usuario'
          description: ''
    post:
      operationId: app_usuarios_create
      tags:
      - app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuario'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Usuario'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Usuario'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
          description: ''

  /app/usuarios/{id}/:
    get:
      operationId: app_usuarios_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - app
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
          description: ''
    put:
      operationId: app_usuarios_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuario'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Usuario'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Usuario'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
          description: ''
    patch:
      operationId: app_usuarios_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUsuario'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUsuario'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUsuario'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
          description: ''
    delete:
      operationId: app_usuarios_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - app
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
          
components:
  schemas:
    Disciplina:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        professor:
          type: integer
        nome:
          type: string
          maxLength: 100
        curso:
          type: string
          maxLength: 100
        descricao:
          type: string
          nullable: true
        carga_horaria:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
      required:
      - carga_horaria
      - curso
      - id
      - nome
      - professor
    PatchedDisciplina:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        professor:
          type: integer
        nome:
          type: string
          maxLength: 100
        curso:
          type: string
          maxLength: 100
        descricao:
          type: string
          nullable: true
        carga_horaria:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
    PatchedReserva:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        data_inicio:
          type: string
          format: date-time
        data_termino:
          type: string
          format: date-time
        periodo:
          allOf:
          - $ref: '#/components/schemas/PeriodoEnum'
          description: |-
            Período da reserva

            * `M` - Manhã
            * `T` - Tarde
            * `N` - Noite
        sala_reservada:
          type: integer
        professor_responsavel:
          type: integer
        disciplina_associada:
          type: integer
    PatchedUsuario:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        password:
          type: string
          writeOnly: true
          maxLength: 128
        last_login:
          type: string
          format: date-time
          nullable: true
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        date_joined:
          type: string
          format: date-time
        tipo:
          allOf:
          - $ref: '#/components/schemas/TipoEnum'
          description: |-
            Tipo de usuário

            * `G` - Gestor
            * `P` - Professor
        ni:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        telefone:
          type: string
          nullable: true
          maxLength: 15
        data_nascimento:
          type: string
          format: date
          nullable: true
        data_contratacao:
          type: string
          format: date
          nullable: true
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
    PeriodoEnum:
      enum:
      - M
      - T
      - N
      type: string
      description: |-
        * `M` - Manhã
        * `T` - Tarde
        * `N` - Noite
    Reserva:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        data_inicio:
          type: string
          format: date-time
        data_termino:
          type: string
          format: date-time
        periodo:
          allOf:
          - $ref: '#/components/schemas/PeriodoEnum'
          description: |-
            Período da reserva

            * `M` - Manhã
            * `T` - Tarde
            * `N` - Noite
        sala_reservada:
          type: integer
        professor_responsavel:
          type: integer
        disciplina_associada:
          type: integer
      required:
      - data_inicio
      - data_termino
      - disciplina_associada
      - id
      - periodo
      - professor_responsavel
      - sala_reservada
    Salas:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nome:
          type: string
          maxLength: 100
        capacidade:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
        id_professor:
          type: integer
          nullable: true
      required:
      - capacidade
      - id
      - nome
    TipoEnum:
      enum:
      - G
      - P
      type: string
      description: |-
        * `G` - Gestor
        * `P` - Professor
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    Usuario:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        password:
          type: string
          writeOnly: true
          maxLength: 128
        last_login:
          type: string
          format: date-time
          nullable: true
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        date_joined:
          type: string
          format: date-time
        tipo:
          allOf:
          - $ref: '#/components/schemas/TipoEnum'
          description: |-
            Tipo de usuário

            * `G` - Gestor
            * `P` - Professor
        ni:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        telefone:
          type: string
          nullable: true
          maxLength: 15
        data_nascimento:
          type: string
          format: date
          nullable: true
        data_contratacao:
          type: string
          format: date
          nullable: true
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
      required:
      - email
      - id
      - ni
      - password
      - tipo
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
